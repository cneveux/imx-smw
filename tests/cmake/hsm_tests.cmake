set(HSM_CONFIG_FILE hsm_config.txt)
set(HSM_COMMAND ${TEST_CMD} ${HSM_CONFIG_FILE})

set(U_GENERATE_001_NAME U_HSM_Generate_001)
set(U_GENERATE_001_DEF ${SMW_TESTS_TARGET_DEF_DIR_FULL_PATH}/${U_GENERATE_001_NAME}.json)
set(U_GENERATE_001_CMD ${HSM_COMMAND} ${U_GENERATE_001_DEF})
add_test(NAME ${U_GENERATE_001_NAME} COMMAND ${U_GENERATE_001_CMD})
set_tests_properties(${U_GENERATE_001_NAME} PROPERTIES LABELS
		     "${UNITARY_LABEL};${HSM_LABEL};${GENERATE_LABEL}")

set(U_EXPORT_001_NAME U_HSM_Export_001)
set(U_EXPORT_001_DEF ${SMW_TESTS_TARGET_DEF_DIR_FULL_PATH}/${U_EXPORT_001_NAME}.json)
set(U_EXPORT_001_CMD ${HSM_COMMAND} ${U_EXPORT_001_DEF})
add_test(NAME ${U_EXPORT_001_NAME} COMMAND ${U_EXPORT_001_CMD})
set_tests_properties(${U_EXPORT_001_NAME} PROPERTIES LABELS
		     "${UNITARY_LABEL};${HSM_LABEL};${EXPORT_LABEL}")

set(U_HASH_001_NAME U_HSM_Hash_001)
set(U_HASH_001_DEF ${SMW_TESTS_TARGET_DEF_DIR_FULL_PATH}/${U_HASH_001_NAME}.json)
set(U_HASH_001_CMD ${HSM_COMMAND} ${U_HASH_001_DEF})
add_test(NAME ${U_HASH_001_NAME} COMMAND ${U_HASH_001_CMD})
set_tests_properties(${U_HASH_001_NAME} PROPERTIES LABELS
		     "${UNITARY_LABEL};${HSM_LABEL};${HASH_LABEL}")

set(U_RNG_001_NAME U_HSM_Rng_001)
set(U_RNG_001_DEF ${SMW_TESTS_TARGET_DEF_DIR_FULL_PATH}/${U_RNG_001_NAME}.json)
set(U_RNG_001_CMD ${HSM_COMMAND} ${U_RNG_001_DEF})
add_test(NAME ${U_RNG_001_NAME} COMMAND ${U_RNG_001_CMD})
set_tests_properties(${U_RNG_001_NAME} PROPERTIES LABELS
             "${UNITARY_LABEL};${HSM_LABEL};${RNG_LABEL}")

set(U_SIGN_VERIFY_001_NAME U_HSM_Sign_Verify_001)
set(U_SIGN_VERIFY_001_DEF ${SMW_TESTS_TARGET_DEF_DIR_FULL_PATH}/${U_SIGN_VERIFY_001_NAME}.json)
set(U_SIGN_VERIFY_001_CMD ${HSM_COMMAND} ${U_SIGN_VERIFY_001_DEF})
add_test(NAME ${U_SIGN_VERIFY_001_NAME} COMMAND ${U_SIGN_VERIFY_001_CMD})
set_tests_properties(${U_SIGN_VERIFY_001_NAME} PROPERTIES LABELS
		     "${UNITARY_LABEL};${HSM_LABEL};${SIGN_LABEL};${VERIFY_LABEL}")

set(U_CIPHER_001_NAME U_HSM_Cipher_001)
set(U_CIPHER_001_DEF ${SMW_TESTS_TARGET_DEF_DIR_FULL_PATH}/${U_CIPHER_001_NAME}.json)
set(U_CIPHER_001_CMD ${HSM_COMMAND} ${U_CIPHER_001_DEF})
add_test(NAME ${U_CIPHER_001_NAME} COMMAND ${U_CIPHER_001_CMD})
set_tests_properties(${U_CIPHER_001_NAME} PROPERTIES LABELS
                        "${UNITARY_LABEL};${HSM_LABEL};${CIPHER_LABEL}")

FILE(GLOB U_HSM_TEST ${TEST_DEF_SRC_DIR}/U_HSM*.json)
FILE(GLOB F_HSM_TEST ${TEST_DEF_SRC_DIR}/F_HSM*.json)

set(U_DERIVE_001_NAME U_HSM_Derive_001)
set(U_TLS_001_NAME U_HSM_TLS_001)
set(F_TLS_001_NAME F_HSM_TLS_001)

if(ENABLE_TLS12)

set(U_DERIVE_001_DEF ${SMW_TESTS_TARGET_DEF_DIR_FULL_PATH}/${U_DERIVE_001_NAME}.json)
set(U_DERIVE_001_CMD ${HSM_COMMAND} ${U_DERIVE_001_DEF})
add_test(NAME ${U_DERIVE_001_NAME} COMMAND ${U_DERIVE_001_CMD})
set_tests_properties(${U_DERIVE_001_NAME} PROPERTIES LABELS
                     "${UNITARY_LABEL};${HSM_LABEL};${DERIVE_LABEL}")

set(F_TLS_001_DEF ${SMW_TESTS_TARGET_DEF_DIR_FULL_PATH}/${F_TLS_001_NAME}.json)
set(F_TLS_001_CMD ${HSM_COMMAND} ${F_TLS_001_DEF})
add_test(NAME ${F_TLS_001_NAME} COMMAND ${F_TLS_001_CMD})
set_tests_properties(${F_TLS_001_NAME} PROPERTIES LABELS
                     "${FUNCTIONAL_LABEL};${HSM_LABEL};${TLS_LABEL}")

list(REMOVE_ITEM U_HSM_TEST ${TEST_DEF_SRC_DIR}/${U_TLS_001_NAME}.json)

else()

set(U_TLS_001_DEF ${SMW_TESTS_TARGET_DEF_DIR_FULL_PATH}/${U_TLS_001_NAME}.json)
set(U_TLS_001_CMD ${HSM_COMMAND} ${U_TLS_001_DEF})
add_test(NAME ${U_TLS_001_NAME} COMMAND ${U_TLS_001_CMD})
set_tests_properties(${U_TLS_001_NAME} PROPERTIES LABELS
                     "${FUNCTIONAL_LABEL};${HSM_LABEL};${TLS_LABEL}")

list(REMOVE_ITEM U_HSM_TEST ${TEST_DEF_SRC_DIR}/${U_DERIVE_001_NAME}.json)
list(REMOVE_ITEM F_HSM_TEST ${TEST_DEF_SRC_DIR}/${F_TLS_001_NAME}.json)

endif()

install(FILES ${SMW_CONFIG_SRC_DIR}/${HSM_CONFIG_FILE}
        DESTINATION ${SMW_TESTS_TARGET_CONFIG_DIR}
        EXCLUDE_FROM_ALL
        COMPONENT ${PROJECT_NAME})

foreach(file IN LISTS U_HSM_TEST)
    install(FILES ${file}
            DESTINATION ${SMW_TESTS_TARGET_DEF_DIR}
            EXCLUDE_FROM_ALL
            COMPONENT ${PROJECT_NAME})
endforeach()

foreach(file IN LISTS F_HSM_TEST)
    install(FILES ${file}
            DESTINATION ${SMW_TESTS_TARGET_DEF_DIR}
            EXCLUDE_FROM_ALL
            COMPONENT ${PROJECT_NAME})
endforeach()
